on:
  push:
    tags: ['*']
    branches: ['main']
  pull_request:
  workflow_dispatch:

jobs:
  ci:
    name: Pix CI
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            PUSH=true
            VERSION="${GITHUB_REF#refs/tags/v}"
          else
            PUSH=false
            VERSION="0.0.0-dev"
          fi

          echo "push=$PUSH" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build and push Pix Docker image to GHCR
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: ./Dockerfile
          cache-from: type=gha,scope=image-ghcr
          cache-to: type=gha,scope=image-ghcr,mode=max
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
          push: ${{ steps.version.outputs.push }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}

      # ---- Pix in Pix ----

      - name: Load Pix docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          cache-from: type=gha,scope=image-ghcr
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}
          load: true

      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      # Run the Pix pipeline with pix dockerized
      - name: Pix run Pix
        run: |
          PIX_DOCKER_BUILDKIT_VERSION=v0.20.0
          CACHE="type=gha,scope=pix,url=$ACTIONS_CACHE_URL,token=$ACTIONS_RUNTIME_TOKEN"
          docker run --rm \
            --env PIX_DOCKER_BUILD_OPTS="--cache-from=\"$CACHE\" --cache-to=\"mode=max,$CACHE\"" \
            --env PIX_DOCKER_BUILDKIT_VERSION="$PIX_DOCKER_BUILDKIT_VERSION" \
            --env VERSION="${{ steps.version.outputs.version }}" \
            --volume="$PWD:$PWD" --workdir="$PWD" \
            --volume /var/run/docker.sock:/var/run/docker.sock \
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }} run --output --no-cache-filter="pix.docs" pix

      - name: Fix pipeline output artifacts permissions
        run: |
          sudo chown -R $(whoami):$(whoami) .pipeline

      - name: Docs Publish
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .pipeline/output/doc
