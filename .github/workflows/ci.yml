on:
  push:
    tags: ["*"]
    branches: ["main"]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  packages: write
  pages: write

jobs:
  bootstrap:
    name: Pix Bootstrap
    runs-on: ubuntu-latest

    outputs:
      image: ${{ steps.version.outputs.image }}
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/v}"
            IMAGE="ghcr.io/${{ github.repository }}:${VERSION}"
          else
            VERSION="0.0.0-dev"
            IMAGE="ttl.sh/$(uuidgen):2h"
          fi

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

      - name: Build and push Pix Docker image to GHCR
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: .
          file: ./Dockerfile
          cache-from: type=gha,scope=image-ghcr
          cache-to: type=gha,scope=image-ghcr,mode=max
          build-args: |
            VERSION=${{ steps.version.outputs.version }}
          push: true
          tags: ${{ steps.version.outputs.image }}

  pix_runs_pix:
    name: Pix runs Pix
    needs: bootstrap

    runs-on: ubuntu-latest

    container:
      image: ${{ needs.bootstrap.outputs.image }}
      credentials:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: docker-build-cache-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            docker-build-cache-${{ github.ref }}
            docker-build-cache-

      - name: Pix run Pix
        run: |
          export PIX_DOCKER_BUILD_OPTS="--builder=\"${{ steps.buildx.outputs.name }}\" --cache-from=type=local,src=/tmp/.buildx-cache --cache-to=type=local,dest=/tmp/.buildx-cache,mode=max"
          export VERSION="${{ needs.bootstrap.outputs.version }}"

          pix run --output pix

      - name: Upload docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: .pipeline/output/doc

  pix_publish_docs:
    name: Publish docs
    needs: pix_runs_pix

    if: github.ref == 'refs/heads/main'

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Download docs artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: .pipeline/output/doc

      - name: Publish docs
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .pipeline/output/doc
